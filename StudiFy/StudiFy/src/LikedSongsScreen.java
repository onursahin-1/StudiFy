import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.border.EmptyBorder;
import model.*;
import java.util.List;
import java.util.ArrayList;

public class LikedSongsScreen extends JFrame {
    private User currentUser;
    private List<Song> likedSongs;
    private JPanel songsPanel;
    private JPanel sidebarPanel;
    private JPanel contentPanel;
    private JLabel nowPlayingLabel;
    private JButton prevButton;
    private JButton playPauseButton;
    private JButton nextButton;
    
    public LikedSongsScreen(User user) {
        this.currentUser = user;
        this.likedSongs = new ArrayList<>();
        
        // Temel pencere ayarlarƒ±
        setTitle("M√ºzik Uygulamasƒ± - Beƒüendiƒüim ≈ûarkƒ±lar");
        setSize(1200, 800);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        
        // Ana panel
        SnowPanel mainPanel = new SnowPanel();
        setContentPane(mainPanel);
        mainPanel.setLayout(new BorderLayout(0, 0));
        
        // Sol men√º
        createSidebar();
        mainPanel.add(sidebarPanel, BorderLayout.WEST);
        
        // Ana i√ßerik
        createContentPanel();
        mainPanel.add(contentPanel, BorderLayout.CENTER);
        
        // Alt √ßalma √ßubuƒüu
        createPlayerPanel();
        
        // √ñrnek ≈üarkƒ±larƒ± ekle
        addSampleSongs();
        updateSongsList();
    }
    
    private void createSidebar() {
        sidebarPanel = new JPanel();
        sidebarPanel.setPreferredSize(new Dimension(250, getHeight()));
        sidebarPanel.setBackground(new Color(20, 20, 20, 200));
        sidebarPanel.setLayout(new BoxLayout(sidebarPanel, BoxLayout.Y_AXIS));
        sidebarPanel.setBorder(new EmptyBorder(20, 20, 20, 20));
        
        // Logo
        JLabel logoLabel = new JLabel("üéÑ");
        logoLabel.setFont(new Font("Arial", Font.BOLD, 32));
        logoLabel.setForeground(Color.WHITE);
        logoLabel.setAlignmentX(Component.LEFT_ALIGNMENT);
        sidebarPanel.add(logoLabel);
        
        // Men√º ba≈ülƒ±klarƒ±
        String[] menuItems = {"Ana Sayfa", "Arama", "√áalma Listeleri", "Beƒüendiklerim"};
        for (String item : menuItems) {
            JButton menuButton = createMenuButton(item);
            
            if (item.equals("Ana Sayfa")) {
                menuButton.addActionListener(e -> {
                    MainScreen mainScreen = new MainScreen(currentUser);
                    mainScreen.setVisible(true);
                    this.dispose();
                });
            } else if (item.equals("Arama")) {
                menuButton.addActionListener(e -> {
                    SearchScreen searchScreen = new SearchScreen(currentUser);
                    searchScreen.setVisible(true);
                    this.dispose();
                });
            } else if (item.equals("√áalma Listeleri")) {
                menuButton.addActionListener(e -> {
                    PlaylistScreen playlistScreen = new PlaylistScreen(currentUser);
                    playlistScreen.setVisible(true);
                    this.dispose();
                });
            }
            
            sidebarPanel.add(Box.createVerticalStrut(10));
            sidebarPanel.add(menuButton);
        }
        
        // Kullanƒ±cƒ± profili
        JPanel profilePanel = new JPanel();
        profilePanel.setLayout(new FlowLayout(FlowLayout.LEFT));
        profilePanel.setBackground(new Color(30, 30, 30, 200));
        profilePanel.setMaximumSize(new Dimension(210, 60));
        
        JLabel avatarLabel = new JLabel("üë§");
        avatarLabel.setFont(new Font("Arial", Font.PLAIN, 24));
        
        JLabel usernameLabel = new JLabel(currentUser.getUsername());
        usernameLabel.setForeground(Color.WHITE);
        usernameLabel.setFont(new Font("Arial", Font.BOLD, 14));
        
        profilePanel.add(avatarLabel);
        profilePanel.add(usernameLabel);
        
        sidebarPanel.add(Box.createVerticalGlue());
        sidebarPanel.add(profilePanel);
    }
    
    private void createContentPanel() {
        contentPanel = new JPanel();
        contentPanel.setOpaque(false);
        contentPanel.setLayout(new BorderLayout());
        contentPanel.setBorder(new EmptyBorder(20, 20, 20, 20));
        
        // √úst ba≈ülƒ±k alanƒ±
        JPanel headerPanel = new JPanel();
        headerPanel.setOpaque(false);
        headerPanel.setLayout(new BorderLayout());
        
        JLabel titleLabel = new JLabel("Beƒüendiƒüim ≈ûarkƒ±lar");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 32));
        titleLabel.setForeground(Color.WHITE);
        
        JLabel countLabel = new JLabel(likedSongs.size() + " ≈üarkƒ±");
        countLabel.setFont(new Font("Arial", Font.PLAIN, 16));
        countLabel.setForeground(Color.GRAY);
        
        JPanel titlePanel = new JPanel();
        titlePanel.setOpaque(false);
        titlePanel.setLayout(new BoxLayout(titlePanel, BoxLayout.Y_AXIS));
        titlePanel.add(titleLabel);
        titlePanel.add(countLabel);
        
        headerPanel.add(titlePanel, BorderLayout.WEST);
        
        // ≈ûarkƒ±lar paneli
        songsPanel = new JPanel();
        songsPanel.setLayout(new BoxLayout(songsPanel, BoxLayout.Y_AXIS));
        songsPanel.setOpaque(false);
        
        JScrollPane scrollPane = new JScrollPane(songsPanel);
        scrollPane.setOpaque(false);
        scrollPane.getViewport().setOpaque(false);
        scrollPane.setBorder(null);
        
        contentPanel.add(headerPanel, BorderLayout.NORTH);
        contentPanel.add(scrollPane, BorderLayout.CENTER);
    }
    
    private void createPlayerPanel() {
        JPanel playerPanel = new JPanel();
        playerPanel.setPreferredSize(new Dimension(getWidth(), 80));
        playerPanel.setBackground(new Color(30, 30, 30, 230));
        playerPanel.setLayout(new BorderLayout());
        playerPanel.setBorder(new EmptyBorder(10, 20, 10, 20));
        
        // ≈ûarkƒ± bilgisi
        JPanel songInfoPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        songInfoPanel.setOpaque(false);
        
        JLabel songLabel = new JLabel("üéµ ≈ûarkƒ± Adƒ±");
        songLabel.setForeground(Color.WHITE);
        songLabel.setFont(new Font("Arial", Font.BOLD, 14));
        
        songInfoPanel.add(songLabel);
        
        // Kontroller
        JPanel controlsPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        controlsPanel.setOpaque(false);
        
        String[] controls = {"‚èÆ", "‚èØ", "‚è≠"};
        for (String control : controls) {
            JButton button = new JButton(control);
            button.setFont(new Font("Arial", Font.PLAIN, 24));
            button.setForeground(Color.WHITE);
            button.setBackground(null);
            button.setBorderPainted(false);
            button.setFocusPainted(false);
            button.setContentAreaFilled(false);
            button.setCursor(new Cursor(Cursor.HAND_CURSOR));
            controlsPanel.add(button);
        }
        
        playerPanel.add(songInfoPanel, BorderLayout.WEST);
        playerPanel.add(controlsPanel, BorderLayout.CENTER);
        
        add(playerPanel, BorderLayout.SOUTH);
    }
    
    private JButton createMenuButton(String text) {
        JButton button = new JButton(text);
        button.setMaximumSize(new Dimension(210, 40));
        button.setFont(new Font("Arial", Font.BOLD, 14));
        button.setForeground(Color.WHITE);
        button.setBackground(text.equals("Beƒüendiklerim") ? 
            new Color(178, 34, 34, 200) : new Color(40, 40, 40, 200));
        button.setBorderPainted(false);
        button.setFocusPainted(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(60, 60, 60, 200));
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(text.equals("Beƒüendiklerim") ? 
                    new Color(178, 34, 34, 200) : new Color(40, 40, 40, 200));
            }
        });
        
        return button;
    }
    
    private void styleBackButton(JButton button) {
        button.setFont(new Font("Arial", Font.BOLD, 24));
        button.setForeground(Color.WHITE);
        button.setBackground(new Color(40, 40, 40, 150));
        button.setBorder(null);
        button.setFocusPainted(false);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        button.setMaximumSize(new Dimension(50, 40));
        
        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(60, 60, 60, 150));
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(new Color(40, 40, 40, 150));
            }
        });
    }
    
    private void addSampleSongs() {
        // √ñrnek beƒüenilen ≈üarkƒ±lar
        Song[] sampleSongs = {
            new Song("Seni Dert Etmeler", "Madrigal", "Neogazino"),
            new Song("R√ºyalarda Buru≈ümu≈üum", "Adamlar", "R√ºyalarda Buru≈ümu≈üum"),
            new Song("Sarƒ±lƒ±rƒ±m Birine", "Model", "Diƒüer Masallar"),
            new Song("Gel", "Model", "Diƒüer Masallar"),
            new Song("Deƒümesin Ellerimiz", "Sezen Aksu", "G√ºl√ºmse"),
            new Song("Firuze", "Sezen Aksu", "G√ºl√ºmse"),
            new Song("Yalnƒ±zlƒ±k Senfonisi", "Manga", "≈ûehr-i H√ºz√ºn"),
            new Song("Dursun Zaman", "Manga", "≈ûehr-i H√ºz√ºn")
        };
        
        // ≈ûarkƒ±larƒ± listeye ekle
        for (Song song : sampleSongs) {
            likedSongs.add(song);
        }
    }
    
    private void updateSongsList() {
        songsPanel.removeAll();
        
        for (int i = 0; i < likedSongs.size(); i++) {
            if (likedSongs.get(i) instanceof Song) {
                Song song = (Song) likedSongs.get(i);
                JPanel item = createSongItem(song, i + 1);
                songsPanel.add(item);
                songsPanel.add(Box.createVerticalStrut(5));
            }
        }
        
        songsPanel.revalidate();
        songsPanel.repaint();
    }
    
    private JPanel createSongItem(Song song, int index) {
        JPanel item = new JPanel();
        item.setLayout(new BorderLayout(10, 0));
        item.setBackground(new Color(40, 40, 40, 150));
        item.setBorder(BorderFactory.createEmptyBorder(10, 15, 10, 15));
        item.setMaximumSize(new Dimension(300, 60));
        
        // Sƒ±ra numarasƒ±
        JLabel numberLabel = new JLabel(String.valueOf(index));
        numberLabel.setForeground(Color.GRAY);
        numberLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        numberLabel.setPreferredSize(new Dimension(30, 20));
        
        // ≈ûarkƒ± bilgileri
        JPanel infoPanel = new JPanel();
        infoPanel.setLayout(new BoxLayout(infoPanel, BoxLayout.Y_AXIS));
        infoPanel.setOpaque(false);
        
        JLabel titleLabel = new JLabel(song.getDisplayInfo());
        titleLabel.setForeground(Color.WHITE);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 14));
        
        JLabel albumLabel = new JLabel(song.getAlbum());
        albumLabel.setForeground(Color.GRAY);
        albumLabel.setFont(new Font("Arial", Font.PLAIN, 12));
        
        infoPanel.add(titleLabel);
        infoPanel.add(Box.createVerticalStrut(5));
        infoPanel.add(albumLabel);
        
        // Kaldƒ±r butonu
        JButton removeButton = new JButton("√ó");
        removeButton.setFont(new Font("Arial", Font.BOLD, 18));
        removeButton.setForeground(Color.WHITE);
        removeButton.setBackground(null);
        removeButton.setBorder(null);
        removeButton.setFocusPainted(false);
        removeButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        
        removeButton.addActionListener(e -> {
            likedSongs.remove(song);
            updateSongsList();
        });
        
        item.add(numberLabel, BorderLayout.WEST);
        item.add(infoPanel, BorderLayout.CENTER);
        item.add(removeButton, BorderLayout.EAST);
        
        // Hover efekti
        item.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                item.setBackground(new Color(178, 34, 34, 150));
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
                item.setBackground(new Color(40, 40, 40, 150));
            }
        });
        
        return item;
    }
    
    private void removeSongFromLiked(Song song) {
        likedSongs.remove(song);
        updateSongsList();
    }
    
    
} 